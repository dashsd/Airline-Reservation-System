{
  "name": "Airline-reservation-system",
  "tagline": "An object oriented approach towards developing an airline reservation system.",
  "body": "# Airline-Reservation-System\r\nAn object oriented approach towards developing an airline reservation system.\r\n\r\n<b><u>Problem Statement</u></b>\r\n<h4>Core data for the airline reservation system</h4>\r\n<ul>\r\n<li>Create and add new airline companies</li>\r\n<li>Create and add new flights for an airline company</li>\r\n<li>A flight must have a start destination, end destination, take-off time and landing time.</li>\r\n<li>Create and add passengers to a flight to make a booking.</li>\r\n<li>Remove passengers from a flight to cancel a booking.</li>\r\n<li>Display all the airlines, flights and passengers on the flight.</li>\r\n</ul>\r\n\r\n<h4>Passenger-Type Information</h4>\r\n<ul>\r\n<li>A <b>standard class passenger</b> can be booked onto only two flights for any one airline.</li>\r\n<li>A <b>business class passenger</b> can be booked onto only four flights for any one airline.</li>\r\n</ul>\r\n\r\n<h4>Requirements for the project</h4>\r\n<ul>\r\n<li>Develop an user interface (UI) that allows an user to have access to the abovementioned features of the system.</li>\r\n<li>Develop a graphical user interface (GUI) using swing to depict the functionality of all the features.</li>\r\n<li>Use serialization to store the data in a file.</li>\r\n<li>Upon running the system, the user is given a choice to either load the serialized data or start fresh.</li>\r\n<li>Provide a comprehensive JUnit test suite.</li>\r\n</ul>\r\n\r\n<br></br>\r\n<h5>Note: <i>This project was a part of my coursework at university. It does not represent an absolute correct usage of object oriented \r\nmethodologies. It is subjected to futher optimizations. Any feedback towards optimizing is welcome as it would help me strengthen my \r\nobject orientation skills.</i></h5>\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}